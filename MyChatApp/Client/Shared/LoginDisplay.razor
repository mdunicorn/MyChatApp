@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MyChatApp.Client.Services;

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject IUserIdentificationService UserIdentificationService

<AuthorizeView>
    <Authorized>
        <a href="authentication/profile">Hello, @context.User.Identity.Name!</a>
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        @if (UserIdentificationService.IsGuestUser())
        {
            <span>Hello <GuestUserNameDisplay />!</span>
            <button class="nav-link btn btn-link" @onclick="DisconnectGuestUser">Disconnect</button>
        }
        <a href="authentication/register">Register</a>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{

    protected override async Task OnInitializedAsync()
    {
        UserIdentificationService.AuthenticationStateChanged += () => StateHasChanged();
        await base.OnInitializedAsync();
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private async void DisconnectGuestUser()
    {
        await UserIdentificationService.ClearGuestUserAsync();
        Navigation.NavigateTo("");
    }
}

@inject IJSRuntime JSRuntime
<div>
    <textarea @ref="editorTextArea" class="form-control" rows="3"
              @bind="Text" @bind:event="oninput"
              placeholder="Enter message to send, then press the Send button." />
    <div class="editor-controls-container">
        <a @ref="emojiButton" class="editor-control">😀</a>
        <a class="editor-control"><span class="oi oi-image editor-control-open-iconic"></span></a>
        <button type="button" class="editor-send btn btn-success" @onclick="OnSend">Send</button>
    </div>
</div>

@code {
    ElementReference editorTextArea;
    ElementReference emojiButton;

    private string _text;

    [Parameter]
    public string Text
    {
        get => _text;
        set
        {
            if (_text == value)
                return;
            _text = value;
            TextChanged.InvokeAsync(_text);
        }
    }

    [Parameter] public EventCallback<string> TextChanged { get; set; }
    [Parameter] public EventCallback OnSend { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
            JSRuntime.InvokeVoidAsync("createEmojiPicker", emojiButton, editorTextArea);
        base.OnAfterRender(firstRender);
    }
}
